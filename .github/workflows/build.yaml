name: Build and Push Docker Minecraft Image to GCR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2


    - id: auth
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY }}'


    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'


    - name: Use gcloud CLI
      run: gcloud info


    - name: Check if Artifact Registry Docker repository exists
      id: check_repo
      run: |
        set +e
        output=$(gcloud artifacts repositories describe containers --location=europe-west1 2>&1)
        result=$?
        set -e
        if [ $result -eq 0 ]; then
          echo "Repository exists. Skipping creation."
          echo "exists=true" >> $GITHUB_ENV
        else
          echo "Repository does not exist."
          echo "exists=false" >> $GITHUB_ENV
        fi
        

    - name: Create Artifact Registry Docker repository
      if: env.exists == 'false'
      run: gcloud artifacts repositories create containers --repository-format=docker --location=europe-west1 --description="Docker repository"


    - name: Configure Docker
      run: gcloud auth configure-docker europe-west1-docker.pkg.dev


    - name: Build and push Docker image
      id: docker
      run: |
        docker build -t ${{ vars.REGISTRY_URL }}/minecraft-server:latest . --platform linux/amd64
        docker push ${{ vars.REGISTRY_URL }}/minecraft-server:latest


    - name: Deploy VM instance
      id: instance
      if: ${{ success() && steps.docker.conclusion == 'success' }}
      run: |
        gcloud compute instances create-with-container mcserver \
          --project=${{ vars.PROJECT_ID }} \
          --zone=europe-west1-b \
          --machine-type=e2-custom-2-6144 \
          --network-interface=network-tier=PREMIUM,private-network-ip=10.132.0.7,subnet=default \
          --maintenance-policy=MIGRATE \
          --provisioning-model=STANDARD \
          --scopes=https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/trace.append,https://www.googleapis.com/auth/devstorage.read_write \
          --tags=mcserver \
          --image=projects/cos-cloud/global/images/cos-stable-109-17800-147-54 \
          --boot-disk-size=50GB \
          --boot-disk-type=pd-balanced \
          --boot-disk-device-name=mcserver \
          --container-image=${{ vars.REGISTRY_URL }}/minecraft-server:latest \
          --container-restart-policy=always \
          --container-privileged \
          --no-shielded-secure-boot \
          --shielded-vtpm \
          --shielded-integrity-monitoring \
          --labels=goog-ec-src=vm_add-gcloud,container-vm=cos-stable-109-17800-147-54


    - name: Faillure, VM instance already exists
      if: ${{ failure() && steps.instance.conclusion == 'failure' }}
      run: |
        echo "It seems that the VM instance already exists."
        echo "If not, please check the authorization of the service account."
        echo "If the problem persists, check your secrets and vars github"
        exit 1


    - name: Create firewall rule
      id: firewall
      if: ${{ success() && steps.instance.conclusion == 'success' }}
      run: |
        gcloud compute --project=${{ vars.PROJECT_ID }} firewall-rules create mcserver \
          --direction=INGRESS \
          --priority=1000 \
          --network=default \
          --action=ALLOW \
          --rules=tcp:25565 \
          --source-ranges=0.0.0.0/0 \
          --target-tags=mcserver